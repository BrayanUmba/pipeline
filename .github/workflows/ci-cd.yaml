name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker pull brayanumba/my-app:latest

      - name: Run Docker image
        run: |
          docker run -d -p 3000:3000 brayanumba/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Minikube
        run: |
          sudo apt-get update
          sudo apt install -y curl wget apt-transport-https
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube version
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          minikube start --driver=docker --force
          minikube status

      - name: Install argocd
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl port-forward svc/argocd-server -n argocd 8080:443 > /dev/null 2>&1 &

      - name: Wait for ArgoCD to be ready
        run: |
          sleep 10 # wait for port-forward to be set up

      - name: Output ArgoCD URL
        run: |
          echo "ArgoCD is available at: http://localhost:8080"


      - name: Deploy application with kubectl
        run: |
          kubectl apply -f k8s/app.yaml
          kubectl get all -n default
